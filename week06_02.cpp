// 解码方法

// 11106 --> 1 1 1 0 6 // 1 11 0 6 // 11 10 6 ....

// 对于i 位置而言，既可以单独成为一个编码，数字范围就是0-9
// 只可以和 i-1 位置 一起成为一个编码， 数字范围是10-26
// 同时上面两种情况都可以。比如11 

class Solution {
public:
    int numDecodings(string s) {
        int n = s.size();

        // 使用一个数组，记录解码方案数;
        vector<int> f(n+1, 0);
        s = " " + s; // 在初始字符串前加一个空字符，便于后面操作。省去判断 i-1 是否越界
        f[0] = 1;

        for (int i = 1; i < n + 1; i++) {
            int a = s[i] - '0', b = (s[i-1] - '0') * 10 + a;
            // 只能单独编码，那么f[n] = f[n-1]
            if (a >= 1 && a <= 9) f[i] = f[i - 1];
            // 既可以单独编码，也可以和前一位一起组成编码 f[n] += f[n-2]
            if (b >= 10 && b <= 26) f[i] += f[i - 2];
        }

        return f[n];
    }
};